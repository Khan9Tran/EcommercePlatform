server:
  port: ${PORT}
  servlet:
    context-path: /api/v1
spring:
  datasource:
    url: "jdbc:postgresql://${HOST}:${DB_PORT}/${POSTGRES_DB}"
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgresSQLDialect
    show-sql: true
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB
      max-request-size: 200MB

  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_DEFAULT_USER}
    password: ${RABBITMQ_DEFAULT_PASS}
    virtual-host: ${RABBITMQ_VHOST}
    ssl:
      enabled: true


  data:
    elasticsearch:
      host: ${ES_HOST}
      port: ${ES_PORT}
      username: ${ES_USERNAME}
      password: ${ES_PASSWORD}
      cluster-nodes: ${ES_HOST}:${ES_PORT}
      cluster-name: docker-cluster
      repositories:
        enabled: true

  spring:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      username: ${REDIS_USERNAME}
      database: ${REDIS_DB}





  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USER}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com

jwt:
  signerKey: ${JWT_SIGNER_KEY}
  valid-duration: 7200 # in second
  refreshable-duration: 360000 # seconds

mail:
  secretKey: ${JWT_MAIL_KEY}
  valid-duration: 1800


cloudinary:
  name: ${CLOUD_NAME}
  api-key: ${API_KEY}
  api-secret: ${API_SECRET}

outbound:
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URI}
  facebook:
    client-id: ${FACEBOOK_CLIENT_ID}
    client-secret: ${FACEBOOK_CLIENT_SECRET}
    redirect-uri: ${FACEBOOK_REDIRECT_URI}

payment:
  vnPay:
    url: ${VN_PAY_PAY_URL}
    tmnCode: ${VN_PAY_TMN_CODE}
    secretKey: ${VN_PAY_SECRET_KEY}
    returnUrl: ${VN_PAY_RETURN_URL}
    version: ${VN_PAY_VERSION}
    command: ${VN_PAY_COMMAND}
    orderType: ${VN_PAY_ORDER_TYPE}

# application.properties
cors:
  allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}
  frontend-url: ${FRONTEND_URL:http://localhost:3000}
  backend-url: ${BACKEND_URL:http://localhost:8080}
  open-api-url: ${OPEN_API_URL:http://localhost:8080/api/v1}
